app:
  name: "Currency Assistant"
  version: "0.1.0"
  debug: false

database:
  type: "sqlite"
  path: "data/currency_assistant.db"
  echo: false  # SQL logging

cache:
  type: "memory"
  default_ttl: 300  # 5 minutes
  max_size: 1000

chat:
  history:
    messages: 16  # Number of prior turns to include when prompting LLM
    max: false   # Set true to include all prior messages (no limit)

api:
  exchange_rate_host:
    base_url: "https://api.exchangerate.host"
    timeout: 10
  serper:
    base_url: "https://google.serper.dev"
    timeout: 10
    enable_whitelist: true
    domain_whitelist:
      - reuters.com
      - bloomberg.com
      - ft.com
      - wsj.com
      - apnews.com
      - bbc.com
      - cnbc.com
      - marketwatch.com
      - economist.com
      - fxstreet.com
      - forex.com
      - investing.com
      - tradingeconomics.com

agents:
  market_data:
    cache_ttl: 5  # seconds
    providers: ["exchange_rate_host", "yfinance"]
  market_intelligence:
    cache_ttl: 60
    lookback_days: 7
    # Maximum number of articles to classify per pair
    max_articles: 4
    # Maximum number of calendar sources to extract events from (per currency)
    max_calendar_sources: 2
    # Maximum concurrent LLM requests for parallel processing
    max_concurrent_llm_calls: 10
    currency_regions:
      USD: US
      EUR: EA
      GBP: GB
      JPY: JP
      CHF: CH
      CAD: CA
      AUD: AU
      NZD: NZ
      SEK: SE
      NOK: NO
      DKK: DK
      PLN: PL
      TRY: TR
      ZAR: ZA
      CNY: CN
      HKD: HK
      SGD: SG
      KRW: KR
      INR: IN
      THB: TH
      IDR: ID
      MXN: MX
      BRL: BR
      ILS: IL
      TWD: TW
      HUF: HU
      CZK: CZ
      RON: RO
  prediction:
    cache_ttl: 300
    horizons: [1, 7, 30]
  decision:
    risk_levels:
      conservative: 0.05
      moderate: 0.10
      aggressive: 0.15

decision:
  risk_profiles:
    conservative:
      weights:
        profit: 0.8
        risk: 1.2
        cost: 0.4
        urgency: 0.3
      min_improvement_bps: 10.0
      event_proximity_threshold_days: 2.0
      volatility_penalty_multiplier: 1.5

    moderate:
      weights:
        profit: 1.0
        risk: 0.8
        cost: 0.3
        urgency: 0.4
      min_improvement_bps: 5.0
      event_proximity_threshold_days: 1.5
      volatility_penalty_multiplier: 1.0

    aggressive:
      weights:
        profit: 1.2
        risk: 0.5
        cost: 0.2
        urgency: 0.5
      min_improvement_bps: 3.0
      event_proximity_threshold_days: 0.5
      volatility_penalty_multiplier: 0.7

  thresholds:
    convert_now_min_utility: 0.3
    staged_min_timeframe_days: 3
    wait_event_proximity_days: 1.5
    min_model_confidence: 0.4
    max_prediction_age_hours: 6

  staging:
    max_tranches: 3
    min_spacing_days: 1
    short_timeframe_tranches: 2
    long_timeframe_tranches: 3
    urgent_pattern: [0.6, 0.4]
    normal_pattern: [0.5, 0.5]
    flexible_pattern: [0.33, 0.33, 0.34]

  costs:
    default_spread_bps: 5.0
    default_fee_bps: 0.0
    staging_cost_multiplier: 1.2

  heuristics:
    enabled: false
    trigger_policy: strict

prediction:
  prediction_horizons: [1, 7, 30]
  cache_ttl_hours: 1
  predictor_backend: "hybrid"  # lightgbm | lstm | hybrid
  features_mode: "price_only"  # price_only | price_plus_intel

  technical_indicators:
    - sma_5
    - sma_20
    - sma_50
    - ema_12
    - ema_26
    - rsi_14
    - macd
    - macd_signal
    - bb_upper
    - bb_lower
    - bb_middle
    - atr_14
    - volatility_20

  min_history_days: 100
  max_history_days: 365

  # Quality gates
  min_samples_required: 500
  min_validation_coverage: 0.85
  min_directional_accuracy: 0.52

  # Fallback
  enable_fallback_heuristics: true
  fallback_strength_pct: 0.15

  # Model registry storage
  model_registry_path: "data/models/prediction_registry.json"
  model_storage_dir: "data/models/prediction/"
  # Explanations (Phase 2 evidence for UI)
  explain_enabled: true
  explain_include_plots: true
  explain_top_n: 5
  # Horizon routing
  default_timeframe: "1_day"  # or "immediate", "1_week", "1_month"
  use_user_timeframe: true     # if true, prefer timeframe parsed from user message
  include_intraday_for_1_day: false
  intraday_horizons: [1, 4, 24]
  daily_horizons: [1, 7, 30]

logging:
  enabled: false  # Set to true to enable logging, false to disable completely
  level: "INFO"
  format: "json"
  file: "logs/currency_assistant.log"

llm:
  default_provider: "copilot"  # Base provider name (without _main/_fast suffix)
  providers:
    # GitHub Copilot variants
    copilot_main:
      model: "gpt-4o-2024-11-20"
      enabled: true
      kwargs:
        temperature: 0.7
        max_tokens: 128000
    copilot_fast:
      model: "gpt-5-mini"
      enabled: true
      kwargs:
        temperature: 0.7
        max_tokens: 8192

    # OpenAI variants
    openai_main:
      model: "gpt-5"
      enabled: true
      kwargs:
        temperature: 0.7
        max_tokens: 128000
    openai_fast:
      model: "gpt-5-mini"
      enabled: true
      kwargs:
        temperature: 0.7
        max_tokens: 8192

    # Claude variants
    claude_main:
      model: "claude-sonnet-4"
      enabled: true
      kwargs:
        temperature: 0.7
        max_tokens: 200000
    claude_fast:
      model: "claude-3.5-sonnet"
      enabled: true
      kwargs:
        temperature: 0.7
        max_tokens: 8192

    # Legacy provider for backward compatibility (uses copilot via GitHub)
    copilot_claude:
      model: "claude-3.5-sonnet"
      enabled: true
      kwargs:
        temperature: 0.7
        max_tokens: 8192

  failover:
    enabled: true
    # Failover within same tier (main with main, fast with fast), then across tiers
    main_order: ["copilot_main", "openai_main", "claude_main"]
    fast_order: ["copilot_fast", "openai_fast", "claude_fast"]
    # Legacy order for backward compatibility
    order: ["copilot_main", "copilot_fast", "openai_main", "claude_main"]
